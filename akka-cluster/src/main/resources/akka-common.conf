akka {

  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]

  loggers = ["akka.event.slf4j.Slf4jLogger"]

  loglevel = "INFO"

  stdout-loglevel = "INFO"

  actor {

    provider = "akka.cluster.ClusterActorRefProvider"

    serializers {
      java = "akka.serialization.JavaSerializer"
    }

    serialization-bindings {
      "com.akka.tutorials.core.ClusterMessages" = java
      "com.akka.tutorials.dto.CrdtMessage" = java
    }

    default-dispatcher.throughput = 1

    deployment {
      /ping {
        router = round-robin-pool
        cluster {
          enabled = on
          use-role = "akka-java-tutorials-node"
        }
      }

    }
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      #hostname = "127.0.0.1"
      port = 0
    }
    log-remote-lifecycle-events = off
  }

  cluster {
    roles = ["akka-java-tutorials-node"]
    retry-unsuccessful-join-after = 4s
    auto-down-unreachable-after = 3s # this doesn't work

    use-dispatcher = cluster-dispatcher

    failure-detector {
      heartbeat-interval = 2s
      min-std-deviation = 500ms
      threshold = 8.0
      acceptable-heartbeat-pause = 4s

    }

  }

}

cluster-dispatcher {
  type = "Dispatcher"
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 1
    parallelism-max = 1
  }
}

